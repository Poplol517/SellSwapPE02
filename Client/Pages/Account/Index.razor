 @page "/account/"

@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]



<h3 class=" = " card-title">Account Page</h3>
<br />
<a href="/users/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New User
</a>
<br />
<br />
@if (Users == null)
{
    <div class="alert alert-info">Loading Users. . .</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>FirstName</th>
                <th>LastName</th>
                <th>UserName</th>
                <th>Phone</th>
                <th>Address</th>
                <th>Email</th>
                <th>Actions</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var user in Users)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.UserName</td>
                    <td>@user.Phone</td>
                    <td>@user.Address</td>
                    <td>@user.Email</td>
                    <td>
                        <a href="/user/view/@user.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/user/edit/@user.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(user.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<Account>? Users;
    protected async override Task OnInitializedAsync()
    {
        Users = await _client.GetFromJsonAsync<List<Account>>($"{Endpoints.UsersEndpoint}");
    }
    async Task Delete(int userId)
    {
        if (Users != null)
        {
            var user = Users.First(q => q.Id == userId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {user.FirstName}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.UsersEndpoint}/{userId}");
                await OnInitializedAsync();
            }
        }

    }
}


