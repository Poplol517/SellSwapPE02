@* @page "/account/"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject AuthenticationStateProvider _authenticationStateProvider
@attribute [Authorize]

<h3>Account</h3>

<FormComponent ButtonText="Edit Account Details" listing="listing" OnValidSubmit="@CreateListing" />

@code {
    Account account = new Account();

    private IList<Account>? Accounts;

    protected override async Task OnInitializedAsync()
    {
        Accounts = await _client.GetFromJsonAsync<List<Account>>($"{Endpoints.AccountsEndpoint}");

        // To bind listing to user
        // Get the authenticated user's information
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Set the authenticated user's information in the listing object
        account.UserName = user.Identity.Name;

        // Retrieve the user ID from the claims using the 'sub' claim
        var userIdClaim = user.FindFirst("sub");
        if (userIdClaim != null)
        {
            account.UserId = userIdClaim.Value;
        }
        else
        {
            // Handle the case where user ID claim is not found
            // You may want to redirect to an error page or take appropriate action
        }
    }

    private async Task CreateListing()
    {
        // Include the authenticated user's information in the listing object

        await _client.PostAsJsonAsync(Endpoints.ListingsEndpoint, listing);
        _navManager.NavigateTo("/buy/");
    }
}


 *@