
@page "/listings/create/"


@inject HttpClient _client
@inject NavigationManager _navManager
@inject AuthenticationStateProvider _authenticationStateProvider


@attribute [Authorize]


<h3>Create</h3>


<FormComponent ButtonText="Create Listing" listing="listing" OnValidSubmit="@CreateListing" />

@code {
    // Initialize a new instance of the Listing class to hold the data for the new listing
    Listing listing = new Listing();

    // Declare a collection to hold existing listings
    private IList<Listing>? Listings;

    // Override the OnInitializedAsync method to perform initialization tasks when the component is initialized
    protected override async Task OnInitializedAsync()
    {
        // Fetch existing listings from the server
        Listings = await _client.GetFromJsonAsync<List<Listing>>($"{Endpoints.ListingsEndpoint}");

        // Retrieve the authenticated user's information
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Bind the authenticated user's information to the new listing
        listing.Lister = user.Identity.Name;

        // Retrieve the user ID from the claims using the 'sub' claim
        var userIdClaim = user.FindFirst("sub");
        if (userIdClaim != null)
        {
            listing.ListerId = userIdClaim.Value;
        }
        else
        {
            _navManager.NavigateTo("/404");
        }
    }

    // Define a method to handle the creation of the new listing
    private async Task CreateListing()
    {
        // Log the bound data for verification purposes
        Console.WriteLine($"Lister: {listing.Lister}");
        Console.WriteLine($"ListerId: {listing.ListerId}");

        // Set default listing status if not provided
        listing.ListingStatusId = 1;

        // Set a default image if none is provided
        if (string.IsNullOrEmpty(listing.Image))
        {
            listing.Image = "/images/noimage.jpg";
        }

        // Send a POST request to the server to create the new listing
        await _client.PostAsJsonAsync(Endpoints.ListingsEndpoint, listing);

        // Depending on the type of listing, navigate to appropriate page
        if (listing != null && listing.ListingTypeId != 2)
        {
            // Navigate to the "buy" page for non-type 2 listings
            _navManager.NavigateTo("/buy");
        }
        else
        {
            // Navigate back to the previous page for type 2 listings
            _navManager.NavigateTo("/swap");
        }
    }
}
