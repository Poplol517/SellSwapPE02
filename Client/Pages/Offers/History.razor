@page "/offers/history"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@implements IDisposable

<h3 class="card-title">Offer History</h3>
<br />

@if (Offers == null)
{
    <div class="alert alert-info">Loading Offers...</div>
}
else
{
    <table class="table table-responsive" id="offersTable">
        <thead>
            <tr>
                <th>Product</th>
                <th>Name</th>
                <th>Reason</th>
                <th>Price</th>
                <th>Offer Type</th>
                <th>Offer Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var offer in Offers)
            {
                if(offer.Listing.ListingStatusId==2)
                {
                    <tr>
                        <td><img src="@offer.Listing.Image" alt="Listing Image" style="max-width: 100px; max-height: 100px;" /></td>
                        <td>@offer.Listing.Name</td>
                        <td>@offer.Reason</td>
                        <td>@offer.Price</td>
                        <td>@offer.Listing.ListingType.Name</td>
                        <td>@offer.Status</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private List<Offer>? Offers;

    protected async override Task OnInitializedAsync()
    {
        Offers = await _client.GetFromJsonAsync<List<Offer>>($"{Endpoints.OffersEndpoint}");
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#offersTable");
    }

    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#offersTable");
    }
}
