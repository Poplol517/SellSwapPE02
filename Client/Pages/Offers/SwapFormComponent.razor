@inject HttpClient _client
@using Microsoft.AspNetCore.Components.Forms


<EditForm Model="@offer" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Description: </label>
            <div>
                <InputText @bind-Value="offer.Description" class="form-control" />
                <ValidationMessage For="@(() => offer.Description)" />
            </div>
        </div>

        



    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">@ButtonText</button>
    }

    <BacktoOffer Target="offers" />
    <BacktoSwap Target="swap" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Offer? offer { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Offer>? Offers;
    private IList<Listing>? Listings;
    private IList<Category>? Categories;
    private IList<ListingType>? ListingTypes;
    private IList<ConditionType>? ConditionTypes;

    protected async override Task OnInitializedAsync() //when the page loads
    {
        Offers = await _client.GetFromJsonAsync<List<Offer>>($"{Endpoints.OffersEndpoint}");
        Listings = await _client.GetFromJsonAsync<List<Listing>>($"{Endpoints.ListingsEndpoint}");
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
        ListingTypes = await _client.GetFromJsonAsync<List<ListingType>>($"{Endpoints.ListingTypeEndpoint}");
        ConditionTypes = await _client.GetFromJsonAsync<List<ConditionType>>($"{Endpoints.ConditionTypeEndpoint}");


    }
   

}

